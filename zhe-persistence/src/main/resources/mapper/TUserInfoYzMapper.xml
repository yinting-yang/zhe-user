<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zhe.user.persistence.TUserInfoYzMapper" >
  <resultMap id="BaseResultMap" type="com.zhe.user.persistence.models.TUserInfoYz" >
    <id column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="register_type" property="registerType" jdbcType="INTEGER" />
    <result column="user_phone" property="userPhone" jdbcType="VARCHAR" />
    <result column="user_email" property="userEmail" jdbcType="VARCHAR" />
    <result column="source_code" property="sourceCode" jdbcType="VARCHAR" />
    <result column="user_status" property="userStatus" jdbcType="INTEGER" />
    <result column="register_time" property="registerTime" jdbcType="TIMESTAMP" />
  </resultMap>

  <sql id="Base_Column_List" >
    user_id, user_name, register_type, user_phone, user_email, source_code, user_status, 
    register_time
  </sql>

  <insert id="insert">
    insert into t_user_info_yz (user_name, register_type,
      user_phone, user_email, source_code, 
      user_status, register_time)
    values (#{userName,jdbcType=VARCHAR}, #{registerType,jdbcType=INTEGER},
      #{userPhone,jdbcType=VARCHAR}, #{userEmail,jdbcType=VARCHAR}, #{sourceCode,jdbcType=VARCHAR}, 
      #{userStatus,jdbcType=INTEGER}, #{registerTime,jdbcType=TIMESTAMP})
  </insert>


  <select id="select" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>from t_user_info_yz
    <include refid="paramWhere"/>
    ORDER BY register_time DESC limit #{start}, #{end}
  </select>

  <!-- 按照条件查询个数-->
  <select id="findTotal" resultType="int">
    SELECT COUNT(1) FROM t_user_info_yz
    <include refid="paramWhere"/>
  </select>
  <delete id="delete">
    DELETE FROM t_user_info_yz
    <include refid="paramWhere"/>
  </delete>
  <!--修改联系信息获取记录信息-->
  <update id="update">
    UPDATE t_user_info_yz
    <set>
      <if test="param != null">
        <if test="param.userName != null">AND user_name = #{param.userName},</if>
        <if test="param.registerType != null">AND register_type = #{param.registerType},</if>
        <if test="param.userPhone != null">AND user_phone = #{param.userPhone},</if>
        <if test="param.userEmail != null">AND user_email = #{param.userEmail},</if>
        <if test="param.sourceCode != null">AND source_code = #{param.sourceCode},</if>
        <if test="param.userStatus != null">AND user_status = #{param.userStatus},</if>
        <if test="param.registerTime != null">AND register_time = #{param.registerTime}</if>

      </if>
    </set>
    <where>
      <if test="param.userId != null">and user_id = #{param.userId}</if>
    </where>
  </update>

  <sql id="paramWhere">
    <where>
      <if test="param != null">
        <if test="param.userId != null">AND user_id = #{param.userId}</if>
        <if test="param.userName != null">AND user_name = #{param.userName}</if>
        <if test="param.registerType != null">AND register_type = #{param.registerType}</if>
        <if test="param.userPhone != null">AND user_phone = #{param.userPhone}</if>
        <if test="param.userEmail != null">AND user_email = #{param.userEmail}</if>
        <if test="param.sourceCode != null">AND source_code = #{param.sourceCode}</if>
        <if test="param.userStatus != null">AND user_status = #{param.userStatus}</if>
        <if test="param.registerTime != null">AND register_time = #{param.registerTime}</if>
      </if>
    </where>
  </sql>

</mapper>